/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: msg.proto */

#ifndef PROTOBUF_C_msg_2eproto__INCLUDED
#define PROTOBUF_C_msg_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Wrapper Wrapper;
typedef struct _Packet Packet;


/* --- enums --- */


/* --- messages --- */

struct  _Wrapper
{
  ProtobufCMessage base;
  char *tag;
  size_t n_packets;
  Packet **packets;
};
#define WRAPPER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&wrapper__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  _Packet
{
  ProtobufCMessage base;
  int32_t id;
  char *name;
};
#define PACKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&packet__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/* Wrapper methods */
void   wrapper__init
                     (Wrapper         *message);
size_t wrapper__get_packed_size
                     (const Wrapper   *message);
size_t wrapper__pack
                     (const Wrapper   *message,
                      uint8_t             *out);
size_t wrapper__pack_to_buffer
                     (const Wrapper   *message,
                      ProtobufCBuffer     *buffer);
Wrapper *
       wrapper__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   wrapper__free_unpacked
                     (Wrapper *message,
                      ProtobufCAllocator *allocator);
/* Packet methods */
void   packet__init
                     (Packet         *message);
size_t packet__get_packed_size
                     (const Packet   *message);
size_t packet__pack
                     (const Packet   *message,
                      uint8_t             *out);
size_t packet__pack_to_buffer
                     (const Packet   *message,
                      ProtobufCBuffer     *buffer);
Packet *
       packet__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   packet__free_unpacked
                     (Packet *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Wrapper_Closure)
                 (const Wrapper *message,
                  void *closure_data);
typedef void (*Packet_Closure)
                 (const Packet *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor wrapper__descriptor;
extern const ProtobufCMessageDescriptor packet__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_msg_2eproto__INCLUDED */
